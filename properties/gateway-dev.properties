server.port=8200

spring.cloud.gateway.routes[0].id=searchModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**

spring.cloud.gateway.routes[2].id=studentManagementModule
spring.cloud.gateway.routes[2].uri=lb://STUDENTMANAGEMENT-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/students/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1


## Springdoc OpenAPI Swagger UI URLs
## swagger for search module
#springdoc.swagger-ui.urls[0].name=searchModule
#springdoc.swagger-ui.urls[0].url=/weather/v3/api-docs
#
## swagger for studentManagement module
#springdoc.swagger-ui.urls[1].name=studentManagementModule
#springdoc.swagger-ui.urls[1].url=/students/v3/api-docs
#
## swagger for studentManagement module
#springdoc.swagger-ui.urls[2].name=detailsModule
#springdoc.swagger-ui.urls[2].url=/details/v3/api-docs

spring.cloud.gateway.discovery.locator.enabled=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*
#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/